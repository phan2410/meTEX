%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.2
%%AI8_CreatorVersion: 15.1.0
%%For: (PhanTom) ()
%%Title: (13Dec.eps)
%%CreationDate: 12/13/2012 1:24 PM
%%Canvassize: 16383
%%BoundingBox: 0 -53 161 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentFonts: TimesNewRomanPSMT
%%DocumentNeededFonts: TimesNewRomanPSMT
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cmykcolor 1.1 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_pattern_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 1
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI3_TemplateBox: 400 -300 400 -300
%AI3_TileBox: 4 -606 796 6
%AI3_DocumentPreview: Header
%%PageOrigin:0 -600
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 0
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cmykcolor 1.1 0
%%Title: (CMYK Color Operators)
%%Version: 1.1 0
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
 end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_cmykcolor eq
	{
 end
	} if
} def
/setcmykcolor
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 0
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 0
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 2.0 0
%%Title: (Typography Operators)
%%Version: 2.0 0
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 48 dict dup begin put
/initialize
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate
{
currentdict Adobe_typography_AI3 eq
	{
 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	/_pntr 0 ddef
	
	{
		counttomark -1 roll
		dup type dup /marktype eq 		
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	_tempEncode
}
def
/TE
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
%
/TZ		
{
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	/_useNativeEncoding exch def
	pop pop
	
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
 begin
	
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		pop
		
		/FontName exch def
		
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			cleartomark
		}
		{	
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
 end
	
	definefont pop
}
def
/tr
{
_ax _ay 3 2 roll
} def
/trj
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx
	{
	tr _psf
	} ddef
/Tj
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx
	{
	tr sp
	} ddef
/Tj
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx
	{
	tr sw rmoveto
	} ddef
/Tj
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx
	{
	tr _ctm _pss
	} ddef
/Tj
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
_tm astore pop iTm 0 0 moveto
} def
/Td
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta
{
pop
} def
/Tf
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl
{
pop
0 exch _leading astore pop
} def
/Tt
{
pop
} def
/TW
{
3 npop
} def
/Tw
{
/_cx exch ddef
} def
/TC
{
3 npop
} def
/Tc
{
/_ax exch ddef
} def
/Ts
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti
{
3 npop
} def
/Tz
{
100 div /_hs exch ddef
iTm
} def
/TA
{
pop
} def
/Tq
{
pop
} def
/Th
{
pop pop pop pop pop
} def
/TX {pop} def
%/Tx
%/Tj
/Tk
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
2 npop
} def
/T*
{
_leading aload pop neg Td
} def
/T*-
{
_leading aload pop Td
} def
/T-
{
_hyphen Tx
} def
/T+
{} def
/TR
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			exit
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	/setstrokeadjust where {pop true setstrokeadjust} if
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
/setstrokeadjust where {pop false setstrokeadjust} if
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: TimesNewRomanPSMT
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Euro 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI3_BeginEncoding: _TimesNewRomanPSMT TimesNewRomanPSMT
[/_TimesNewRomanPSMT/TimesNewRomanPSMT 0 0 0 TZ%AI3_EndEncoding TrueType
%AI3_BeginPattern: (Leaves Graphic)
(Leaves Graphic) 0 0 80.334 77.334 [
%AI3_Tile
(0 O 0 R 0.450904 0.360815 0.34818 0.01294 k
 0.450904 0.360815 0.34818 0.01294 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d27.6885 30.9795 m
25.876 31.9717 23.5693 31.7236 23.0762 29.8594 c
22.7598 28.6709 23.3369 28.6211 23.3467 27.3223 c
23.3506 26.7256 22.7607 25.6357 21.999 26.1035 c
19.8057 27.4512 21.251 29.6807 18.9316 30.9258 c
18.0752 31.3857 16.791 31.6025 16.208 30.0918 c
15.8076 29.0527 16.0557 27.4346 16.7393 26.3926 c
17.8174 24.7559 18.2344 24.6045 18.3008 22.6875 c
18.3486 21.3154 17.6816 20.3096 16.5234 21.0859 c
14.6279 22.3594 14.8779 23.4648 14.3652 25.2881 c
13.9053 26.9297 12.5605 28.4404 10.5918 28.4678 c
8.4941 28.4951 7.3613 26.5625 8.6387 23.9346 c
9.8604 21.415 13.627 19.7725 12.9961 16.8389 c
12.5908 14.959 9.9072 15.5898 8.3271 18.4854 c
6.3193 22.1602 5.2715 24.9355 2.8477 24.2568 c
-3.915 22.3613 4.0186 6.5742 9.3604 3.249 C
27.6885 30.9795 L
f
74.7803 46.3291 m
72.9443 45.3818 70.6445 45.6836 70.1943 47.5586 c
69.9072 48.7539 70.4854 48.79 70.5264 50.0889 c
70.5439 50.6855 69.9814 51.7881 69.2061 51.3389 c
66.9814 50.043 68.374 47.7813 66.0264 46.5918 c
65.1602 46.1523 63.8701 45.9658 63.3232 47.4893 c
62.9482 48.5371 63.2344 50.1494 63.9434 51.1758 c
65.0596 52.7861 65.4805 52.9268 65.5928 54.8418 c
65.6729 56.2109 65.0273 57.2334 63.8525 56.4844 c
61.9277 55.2568 62.1523 54.1455 61.5967 52.334 c
61.0977 50.7051 59.7188 49.2266 57.748 49.2461 c
55.6494 49.2676 54.5645 51.2275 55.9023 53.8252 c
57.1846 56.3135 60.9893 57.8672 60.4268 60.8154 c
60.0674 62.7031 57.3691 62.1377 55.7217 59.2793 c
53.627 55.6533 52.5117 52.9033 50.1064 53.6406 c
43.3896 55.6953 51.6953 71.2891 57.1143 74.4863 C
74.7803 46.3291 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.169863 0.120485 0.123751 0 k
 0.169863 0.120485 0.123751 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d17.0654 58.8906 m
12.7451 57.7656 12.3018 52.79 13.1133 49.0762 c
13.9238 45.3613 19.541 39.8438 20.0234 40.5977 c
22.0967 43.8262 24.291 46.1221 21.0342 53.79 C
26.5947 40.4502 37.8477 42.623 Y
17.0654 58.8906 L
f
63.4111 20.7119 m
67.5889 22.29 67.501 27.2842 66.3008 30.8916 c
65.0977 34.498 58.9277 39.3896 58.5273 38.5869 c
56.8105 35.1572 54.8701 32.6416 58.9238 25.3623 C
51.9775 38.0361 41.0215 34.6807 Y
63.4111 20.7119 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.697627 0.675227 0.638575 0.739559 k
 0.697627 0.675227 0.638575 0.739559 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d41.0215 34.6807 m
41.251 23.8848 51.8945 21.0586 55.8936 20.9873 C
48.5049 20.5566 45.8486 13.6074 46.0898 13.2861 c
47.5352 11.3574 53.1738 9.6904 56.9893 11.4404 c
60.6055 13.0996 63.3867 17.3389 62.6104 19.1094 C
66.8965 16.1416 72.9023 15.1934 76.8857 16.2373 C
76.6279 17.6484 L
71.5947 16.7344 68.127 17.8652 63.4111 20.7119 C
41.0215 34.6807 L
f
37.8477 42.623 m
38.7646 53.3838 28.4814 57.3242 24.5137 57.8193 C
31.9063 57.4639 35.2852 64.0908 35.0781 64.4346 c
33.8477 66.5068 28.416 68.7637 24.4365 67.4287 c
20.666 66.1631 17.4482 62.2432 18.0322 60.3994 C
14.0869 63.8076 8.2158 65.3877 4.1445 64.7725 C
4.25 63.3428 L
9.3525 63.7168 12.6807 62.2236 17.0654 58.8906 C
37.8477 42.623 L
f
74.7803 46.3291 m
76.4316 47.5684 77.1602 49.7715 75.668 50.9922 c
74.7178 51.7705 74.4326 51.2666 73.2471 51.7949 c
72.7012 52.0391 71.9521 53.0254 72.6943 53.5264 c
74.8281 54.9668 76.2607 52.7285 78.3525 54.3242 c
79.124 54.9131 79.8535 55.9922 78.7197 57.1484 c
77.9404 57.9424 76.3643 58.3877 75.1328 58.1943 c
73.1973 57.8916 72.8857 57.5732 71.1143 58.3057 c
69.8447 58.8291 69.2061 59.8545 70.3926 60.5859 c
72.334 61.7852 73.2383 61.1006 75.1104 60.8125 c
76.7939 60.5537 78.7266 61.1514 79.5645 62.9336 c
80.459 64.8311 79.166 66.6611 76.2451 66.5869 c
73.4482 66.5166 70.3936 63.7666 67.9824 65.5557 c
66.4395 66.7012 68.123 68.8828 71.4141 69.125 c
75.5898 69.4326 78.5508 69.2393 78.9346 71.7256 c
80.0068 78.667 62.3047 77.9434 57.1143 74.4863 C
74.7803 46.3291 L
f
27.6885 30.9795 m
29.3105 29.7012 29.9863 27.4824 28.4658 26.2959 c
27.4951 25.54 27.2236 26.0527 26.0264 25.5518 c
25.4756 25.3203 24.7031 24.3525 25.4326 23.833 c
27.5313 22.3438 29.0156 24.5479 31.0703 22.9014 c
31.8281 22.2939 32.5313 21.1973 31.3701 20.0693 c
30.5723 19.2939 28.9863 18.8877 27.7578 19.1094 c
25.8311 19.458 25.5283 19.7832 23.7393 19.0938 c
22.458 18.5996 21.7939 17.5908 22.9629 16.8301 c
24.877 15.585 25.7949 16.248 27.6738 16.4922 c
29.3643 16.7109 31.2813 16.0674 32.0781 14.2666 c
32.9258 12.3477 31.5908 10.5488 28.6729 10.6924 c
25.877 10.8291 22.8896 13.6514 20.4365 11.9199 c
18.8672 10.8115 20.498 8.5898 23.7813 8.2695 c
27.9492 7.8643 30.915 7.9863 31.2393 5.4912 c
32.1465 -1.4736 14.4648 -0.3311 9.3604 3.249 C
27.6885 30.9795 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%%EndSetup
0 A
0 R
0.75021 0.679683 0.670222 0.90164 K
0 J 0 j 1 w 10 M []0 d14.3901 -32.5474 m
15.0752 -21.0576 25.1582 -20.9502 v
S
14.3901 -32.5474 m
14.0947 -44.146 17.4238 -44.146 v
20.752 -44.146 21.1436 -32.6025 21.0454 -32.6025 c
20.9478 -32.6025 21.5361 -21.0596 14.6826 -20.9517 c
8.23926 -19.4854 3.31982 -32.5474 v
S
24.8447 -32.5981 m
25.5303 -21.1084 35.6133 -21 v
S
25.1372 -21.002 m
31.9893 -21.1094 31.4019 -32.6528 31.501 -32.6528 c
31.5962 -32.6528 31.207 -44.1963 27.877 -44.1963 c
24.5493 -44.1963 24.8447 -32.5981 y
S
35.2979 -32.6641 m
35.9844 -21.1738 46.0664 -21.0659 v
S
35.5908 -21.0669 m
42.4448 -21.1748 41.8569 -32.7183 41.9546 -32.7183 c
42.0518 -32.7183 41.6602 -44.2617 38.332 -44.2617 c
35.0039 -44.2617 35.2979 -32.6641 y
S
45.7529 -32.7139 m
46.439 -21.2236 56.5225 -21.1167 v
S
46.0464 -21.1172 m
52.8979 -21.2251 52.3115 -32.7686 52.4102 -32.7686 c
52.5059 -32.7686 52.1157 -44.3115 48.7856 -44.3115 c
45.4595 -44.3115 45.7529 -32.7139 y
S
55.877 -32.5474 m
56.561 -21.0576 66.6445 -20.9502 v
S
56.1694 -20.9517 m
63.0234 -21.0596 62.436 -32.6025 62.5332 -32.6025 c
62.6299 -32.6025 62.2388 -44.146 58.9106 -44.146 c
55.5815 -44.146 55.877 -32.5474 y
S
66.3311 -32.5981 m
67.0171 -21.1084 77.0996 -21 v
S
66.625 -21.002 m
73.4766 -21.1094 72.8892 -32.6528 72.9878 -32.6528 c
73.0845 -32.6528 72.6943 -44.1963 69.3643 -44.1963 c
66.0366 -44.1963 66.3311 -32.5981 y
S
76.7861 -32.6641 m
77.4702 -21.1738 87.5537 -21.0659 v
S
77.0781 -21.0669 m
83.9316 -21.1748 83.3442 -32.7183 83.4424 -32.7183 c
83.5391 -32.7183 83.1479 -44.2617 79.8198 -44.2617 c
76.4897 -44.2617 76.7861 -32.6641 y
S
87.2397 -32.7139 m
87.9263 -21.2236 98.0093 -21.1167 v
101.9438 -19.2183 101.9438 -32.5474 v
S
87.5342 -21.1172 m
94.3857 -21.2251 93.7979 -32.7686 93.897 -32.7686 c
93.9937 -32.7686 93.6025 -44.3115 90.2739 -44.3115 c
86.9458 -44.3115 87.2397 -32.7139 y
S
100.5381 -32.7153 m
108.0337 -32.7153 L
S
2 w3.31982 -3.2002 m
3.31982 -52.0122 L
S
1 w0 -52.0122 m
160.2339 -52.0122 L
S
127.2432 -50.4116 m
108.0337 -50.4116 L
108.0337 -14.4043 L
127.2432 -14.4043 L
127.2432 -50.4116 L
s
u
0 To
1 0 0 1 112.9531 -33.6064 0 Tp
TP
1 0 0 1 112.9531 -33.6064 Tm
0 Tr
0 O
0.75021 0.679683 0.670222 0.90164 k
4 M/_TimesNewRomanPSMT 8.77106 Tf
116.7715 Tz
0 Tt
0 0 Tl
0 Tc
(\155) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 37.7568 -16.8604 0 Tp
TP
1 0 0 1 37.7568 -16.8604 Tm
0 Tr
/_TimesNewRomanPSMT 7.71606 Tf
126.0546 Tz
0 Tt
0 0 Tl
0 Tc
(\153) Tx 1 0 Tk
TO
U

u
u
u
u
0.697627 0.675227 0.638575 0.739559 k
150.8174 -32.8022 m
150.5156 -32.8042 L
150.521 -33.6104 L
150.8232 -33.6084 L
150.8174 -32.8022 L
f
150.8091 -31.6021 m
150.5073 -31.604 L
150.5127 -32.4102 L
150.8149 -32.4082 L
150.8091 -31.6021 L
f
150.8008 -30.4019 m
150.499 -30.4038 L
150.5044 -31.21 L
150.8066 -31.208 L
150.8008 -30.4019 L
f
150.7925 -29.2012 m
150.4902 -29.2036 L
150.4961 -30.0093 L
150.7979 -30.0073 L
150.7925 -29.2012 L
f
150.7842 -28.001 m
150.4819 -28.0034 L
150.4878 -28.8091 L
150.7896 -28.8071 L
150.7842 -28.001 L
f
150.7759 -26.8008 m
150.4736 -26.8027 L
150.4795 -27.6084 L
150.7813 -27.6064 L
150.7759 -26.8008 L
f
150.7676 -25.6006 m
150.4653 -25.6025 L
150.4712 -26.4082 L
150.7729 -26.4063 L
150.7676 -25.6006 L
f
U
U
u
u
150.7593 -24.3999 m
150.457 -24.4019 L
150.4629 -25.208 L
150.7646 -25.2061 L
150.7593 -24.3999 L
f
150.751 -23.1997 m
150.4487 -23.2017 L
150.4546 -24.0078 L
150.7563 -24.0059 L
150.751 -23.1997 L
f
150.7427 -21.9995 m
150.4404 -22.0015 L
150.4458 -22.8076 L
150.748 -22.8057 L
150.7427 -21.9995 L
f
150.7344 -20.7988 m
150.4321 -20.8013 L
150.4375 -21.6069 L
150.7397 -21.605 L
150.7344 -20.7988 L
f
150.7256 -19.5986 m
150.4238 -19.6011 L
150.4292 -20.4067 L
150.7314 -20.4048 L
150.7256 -19.5986 L
f
150.7173 -18.3984 m
150.4155 -18.4004 L
150.4209 -19.2061 L
150.7231 -19.2041 L
150.7173 -18.3984 L
f
150.709 -17.1982 m
150.4072 -17.2002 L
150.4126 -18.0059 L
150.7148 -18.0039 L
150.709 -17.1982 L
f
U
U
u
u
150.7007 -15.9976 m
150.3989 -15.9995 L
150.4043 -16.8057 L
150.7065 -16.8037 L
150.7007 -15.9976 L
f
150.6924 -14.7974 m
150.3906 -14.7993 L
150.396 -15.6055 L
150.6982 -15.6035 L
150.6924 -14.7974 L
f
150.6841 -13.5972 m
150.3818 -13.5991 L
150.3877 -14.4053 L
150.6899 -14.4033 L
150.6841 -13.5972 L
f
150.6758 -12.3965 m
150.3735 -12.3989 L
150.3794 -13.2046 L
150.6816 -13.2026 L
150.6758 -12.3965 L
f
150.6675 -11.1963 m
150.3652 -11.1987 L
150.3711 -12.0044 L
150.6729 -12.0024 L
150.6675 -11.1963 L
f
150.6592 -9.99609 m
150.3569 -9.99805 L
150.3628 -10.8037 L
150.6646 -10.8018 L
150.6592 -9.99609 L
f
150.6509 -8.7959 m
150.3486 -8.79785 L
150.3545 -9.604 L
150.6563 -9.60156 L
150.6509 -8.7959 L
f
U
U
u
u
150.6426 -7.59521 m
150.3403 -7.59717 L
150.3462 -8.40332 L
150.6479 -8.40137 L
150.6426 -7.59521 L
f
150.6343 -6.39502 m
150.332 -6.39697 L
150.3379 -7.20313 L
150.6396 -7.20117 L
150.6343 -6.39502 L
f
150.626 -5.19482 m
150.3237 -5.19678 L
150.3291 -6.00293 L
150.6313 -6.00098 L
150.626 -5.19482 L
f
150.6177 -3.99414 m
150.3154 -3.99658 L
150.3208 -4.80225 L
150.623 -4.80029 L
150.6177 -3.99414 L
f
150.6089 -2.79395 m
150.3071 -2.79639 L
150.3125 -3.60205 L
150.6147 -3.6001 L
150.6089 -2.79395 L
f
150.6006 -1.59375 m
150.2988 -1.5957 L
150.3042 -2.40137 L
150.6064 -2.39941 L
150.6006 -1.59375 L
f
150.5923 -0.393555 m
150.2905 -0.395508 L
150.2959 -1.20166 L
150.5981 -1.19922 L
150.5923 -0.393555 L
f
U
U
U
U
0 R
0.75021 0.679683 0.670222 0.90164 K
0.25 w 10 M117.2881 -13.3359 m
117.2881 -3.2002 L
S
u
0 To
-0.001719 -0.999998 0.999997 -0.002228 154.4199 -10.3535 0 Tp
TP
-0.001719 -0.999998 0.999997 -0.002228 154.4199 -10.3535 Tm
0 Tr
0 O
0.75021 0.679683 0.670222 0.90164 k
1 w 4 M/_TimesNewRomanPSMT 5.54259 Tf
112.3709 Tz
0 Tt
0 0 Tl
0 Tc
(\145\161\165\151\154\151\142\162\151\165\155) Tx 1 0 Tk
TO
U

10 M119.2778 -8.26904 m
128.8828 -8.26904 L
N
0 O
0 0 0 0 k
0 R
0.75021 0.679683 0.670222 0.90164 K
0.25 w138.7207 -8.26904 m
148.0918 -8.26904 L
B
119.2778 -8.26904 m
128.8828 -8.26904 L
S
u
0 To
1 0 0 1 131.2236 -10 0 Tp
TP
1 0 0 1 131.2236 -10 Tm
0 Tr
0 O
0.75021 0.679683 0.670222 0.90164 k
1 w 4 M/_TimesNewRomanPSMT 9.59253 Tf
97.6699 Tz
0 Tt
0 0 Tl
0 Tc
(\170) Tx 1 0 Tk
TO
U

u
0 R
0.75021 0.679683 0.670222 0.90164 K
10 M96.4995 -5.09033 m
S
U
u
U

u
u
u
0 O
0.718868 0.658686 0.646998 0.739681 k
119.9316 -7.69141 m
120.1001 -7.85938 L
119.7031 -8.25635 L
120.1001 -8.65283 L
119.9316 -8.82129 L
119.3667 -8.25635 L
119.9316 -7.69141 L
f
U
U
U
u
u
u
147.4253 -8.56689 m
147.2568 -8.39893 L
147.6538 -8.00195 L
147.2568 -7.60547 L
147.4253 -7.43701 L
147.9902 -8.00195 L
147.4253 -8.56689 L
f
U
U
U
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF
